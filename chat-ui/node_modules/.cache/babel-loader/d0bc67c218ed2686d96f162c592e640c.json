{"ast":null,"code":"var _jsxFileName = \"/Users/saivineeth/Documents/Course_work/Distributed/Project/Distributed-Multi-Room-Chat-Application/chat-ui/src/components/TabPanel/tabpanel.js\";\nimport React, { useState, useEffect, memo } from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core//Box';\nimport Messages from '../Messages/Messages';\nimport Input from '../Input/Input';\nimport _ from 'lodash';\nimport chatAPI from '../../services/chatapi';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\" // hidden={value !== index}\n    ,\n    id: `vertical-tabpanel-${index}`,\n    \"aria-labelledby\": `vertical-tab-${index}`,\n    style: {\n      width: value == index ? \"100%\" : 0,\n      visibility: value == index ? 'visible' : 'hidden',\n      background: \"cornsilk\"\n    }\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      height: \"85vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, children)));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`\n  };\n}\n\nconst ChatView = ({\n  user,\n  newMessage,\n  topic\n}) => {\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (newMessage != null) {\n      if (newMessage.topic == topic) {\n        onMessageReceived(newMessage);\n      }\n    }\n  }, [newMessage]);\n\n  let onMessageReceived = msg => {\n    console.log('New Message Received!!', msg);\n    setMessages(messages.concat(msg));\n  };\n\n  let onSendMessage = msgText => {\n    chatAPI.sendMessage(user.username, msgText, topic).then(res => {\n      console.log('Sent', res);\n    }).catch(err => {\n      console.log('Error Occured while sending message to api');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    currentUser: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onSendMessage: onSendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default function GroupView({\n  user,\n  newMessage\n}) {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    style: {\n      flexGrow: 1,\n      bgcolor: 'background.paper',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    orientation: \"vertical\",\n    variant: \"scrollable\",\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"Vertical tabs example\",\n    style: {\n      border: \"1px dotted gray\",\n      backgroundColor: \"darkkhaki\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Topic 1\"\n  }, a11yProps(0), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Topic 2\"\n  }, a11yProps(1), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"Topic 3\"\n  }, a11yProps(2), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChatView, {\n    user: user,\n    newMessage: newMessage,\n    topic: \"topic1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChatView, {\n    user: user,\n    newMessage: newMessage,\n    topic: \"topic2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChatView, {\n    user: user,\n    newMessage: newMessage,\n    topic: \"topic3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/saivineeth/Documents/Course_work/Distributed/Project/Distributed-Multi-Room-Chat-Application/chat-ui/src/components/TabPanel/tabpanel.js"],"names":["React","useState","useEffect","memo","Tabs","Tab","Typography","Box","Messages","Input","_","chatAPI","TabPanel","props","children","value","index","other","width","visibility","background","height","a11yProps","id","ChatView","user","newMessage","topic","messages","setMessages","onMessageReceived","msg","console","log","concat","onSendMessage","msgText","sendMessage","username","then","res","catch","err","GroupView","setValue","handleChange","event","newValue","flexGrow","bgcolor","display","border","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, memo } from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core//Box';\nimport Messages from '../Messages/Messages';\nimport Input from '../Input/Input';\nimport _ from 'lodash'\n\nimport chatAPI from '../../services/chatapi';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            // hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            style={{ width: value == index? \"100%\": 0, visibility: value == index? 'visible': 'hidden', background: \"cornsilk\" }}\n            {...other}\n        >\n            <Box style={{ width: \"100%\" }}>\n                <Typography style={{ height: \"85vh\" }}>{children}</Typography>\n            </Box>\n            \n        </div>\n    );\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}\n\nconst ChatView = ({user, newMessage, topic}) => {\n    const [messages, setMessages] = useState([])\n\n    useEffect(() => {\n        if (newMessage!=null){\n            if(newMessage.topic == topic){\n                onMessageReceived(newMessage);\n            }\n        }\n      }, [newMessage]);\n\n    let onMessageReceived = (msg) => {\n        console.log('New Message Received!!', msg);\n        setMessages(messages.concat(msg));\n    }\n\n    let onSendMessage = (msgText) => {\n        chatAPI.sendMessage(user.username, msgText, topic).then(res => {\n            console.log('Sent', res);\n        }).catch(err => {\n            console.log('Error Occured while sending message to api');\n        })\n    }\n\n    return (\n        <>\n            <Messages messages={messages} currentUser={user} />\n            <Input onSendMessage={onSendMessage} />\n        </>\n    )\n}\n\nexport default function GroupView({ user , newMessage}) {\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Box\n            style={{ flexGrow: 1, bgcolor: 'background.paper', display: 'flex' }}\n        >\n            <Tabs\n                orientation=\"vertical\"\n                variant=\"scrollable\"\n                value={value}\n                onChange={handleChange}\n                aria-label=\"Vertical tabs example\"\n                style={{ border: \"1px dotted gray\", backgroundColor: \"darkkhaki\" }}\n            >\n                <Tab label=\"Topic 1\" {...a11yProps(0)} />\n                <Tab label=\"Topic 2\" {...a11yProps(1)} />\n                <Tab label=\"Topic 3\" {...a11yProps(2)} />\n            </Tabs>\n            <TabPanel value={value} index={0} >\n                <ChatView user={user} newMessage={newMessage} topic={\"topic1\"}/>\n            </TabPanel>\n            <TabPanel value={value} index={1} >\n                <ChatView user={user} newMessage={newMessage} topic={\"topic2\"}/>\n            </TabPanel>\n            <TabPanel value={value} index={2} >\n                <ChatView user={user} newMessage={newMessage} topic={\"topic3\"}/>\n            </TabPanel>\n        </Box>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}